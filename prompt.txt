请一下是一段伪代码格式示范,我需要你仿照其将我的代码转换为伪代码,并且注意一下要点:
1.Function的用法为Fucntion{func}{input}，并且以\EndFunction结束，if的用法为If{condition}并且以\EndIf结束
2.变量名称不要以下划线分割，若程序中出现含下滑线变量名，请将其转换为驼峰命名法
3.原样保留源代码中的注释
4.除了函数的输入和输出外，略过声明变量的部分
5.请以INPUT,和OUTPUT标注输入输出,例如    
\State \textbf{INPUT:} $array$(2D array of calculator24)  
\State \textbf{OUTPUT:} $pairs$(2D array of calculator24)
6.调用函数请使用小括号,如func1($x1,x2$);从数组中取值请使用中括号,如$array[i]$。
7.变量名和数组名前后请使用$$，不要使用\textit{}。变量的赋值格式为:State $i \gets$  $R$;这一条也包括for循环中的赋值，即\For{$i \gets$ $1$ \To $n$}
8.请格外注意，调用函数时函数名不应斜体，如果要表示将函数计算结果赋值给x，则应写为$x \gets$ f($y$);
9.条件语句中仍应该为等号，即\If{$x=1$}
10.忽略了具体的语法，专注于描述逻辑流程,你可以适当删减不重要的部分
11.如果遇到了for...else的结构，请不要使用关键字\Else或\Else For,使用\State \textbf{else for}实现
12.Break,Print,Raise,Continue等非结构关键字不要使用\Break{}命令，请使用\textbf{Break}实现
13.如果是一个类型class,请以\State \textbf{Class}开始，简写init部分，只需要在一行中列出属性即可，对于其中的一系列方法函数，请在所有方法之前写上\State \textbf{Method},之后的函数同样以Fucntion{func}{input}开始，并且以\EndFunction结束.注意：请不要使用\Method和\EndMethod
14.在类型如如果出现self，请将其省略.如f(self,x)应为f(x),self.u应为u
15.必要时请省略*
16.若出现@,其表示矩阵乘法,\cdot
 
\begin{breakablealgorithm}
\caption{ReducePair}
\begin{algorithmic}
  \Function{ReducePair}{$array$}
    \State \textbf{INPUT:} $array$ (2D array of calculator24)
    \State \textbf{OUTPUT:} reducedPair (n $\times 1$ 2D array of calculator24)
    \State $maxIter \gets 100$ \Comment{Limit maximum number of iterations}
    \State $reducedPair \gets$ ReducePairStep(GeneratePairs($array$))
    \For{$i \gets 1$ \To $maxIter$}
      \State $reducedPair \gets$ ReducePairStep(GeneratePairs($reducedPair$))
      \If {size($reducedPair$, 2) = $1$} \Comment{If only one column remains, return}
        \State \Return
      \EndIf
    \EndFor
  \EndFunction
\end{algorithmic}
\end{breakablealgorithm}

以下为需要转换的python代码:
def PRN(n,dim,rmin=0,rmax=1,seed=515): #伪随机数生成器
    m = 2**31-1
    a = 48271
    b = 43
    x = seed
    result = []
    for i in range(n*dim):
        x = (a*x+b)%m
        result.append((rmin+(rmax-rmin)*x/m))
    return np.array(result).reshape(n,dim)